package com.example.spring.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.BodyInserters;
import org.springframework.web.reactive.function.server.ServerRequest;
import org.springframework.web.reactive.function.server.ServerResponse;
import org.springframework.web.util.UriComponentsBuilder;

import com.example.spring.dao.MongoRepositoryImpl;
import com.example.spring.model.User;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@Component
public class UserHandler {

	@Autowired
	private  MongoRepositoryImpl repository;
	
	public UserHandler(MongoRepositoryImpl repository) {
		this.repository = repository;
	}
	
	public Mono<ServerResponse> hello(ServerRequest req){
		return  ServerResponse.ok().contentType(MediaType.TEXT_PLAIN)
				.body(BodyInserters.fromObject("Hello World................123456" ));
	}
	
	public Mono<ServerResponse> registerUser(ServerRequest req){
		Mono<User> user=req.bodyToMono(User.class);
		Mono<User> monoUser = user.flatMap(user1 -> repository.save(user1));
		return ServerResponse.created(UriComponentsBuilder
				.fromPath("/register").build().toUri())
				.contentType(MediaType.APPLICATION_JSON)
				.body(monoUser,User.class);
	
	}
	
	public Mono<ServerResponse> listUser(ServerRequest request) { 
		Flux<User> user=repository.findAll();
		
		return ServerResponse.ok().contentType(MediaType.APPLICATION_JSON).body(user, User.class);
	}
	
	public Mono<ServerResponse> getUser(ServerRequest request){
		String userId=request.pathVariable("id");
		Mono<User> usermono=repository.findById(userId);
		
		return ServerResponse.ok().contentType(MediaType.APPLICATION_JSON).body(usermono,User.class);
	}
}
